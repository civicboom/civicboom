#!/bin/bash
if [ `whoami` != "postgres" ] ; then
	exec sudo -u postgres $0 $* 2> /tmp/init_cbdb.log
fi

date >&2


##############################################################################
# clear

echo "Removing old data"
echo "Removing old data" >&2
dropdb civicboom_log
dropdb civicboom_gis
dropdb civicboom
dropuser civicboom


##############################################################################
# user

echo "Creating civicboom user"
echo "Creating civicboom user" >&2
export PGPASSWORD=civicboom
echo "create user civicboom with password '$PGPASSWORD';" | psql -q


##############################################################################
# civicboom

echo "Creating civicboom database"
echo "Creating civicboom database" >&2
createdb -E utf8 -O civicboom civicboom
createlang plpgsql civicboom

echo "  Loading PostGIS extras"
psql -q -d civicboom -f /usr/share/postgresql/8.4/contrib/postgis.sql
psql -q -d civicboom -f /usr/share/postgresql/8.4/contrib/spatial_ref_sys.sql

echo "  Granting extra permissions"
echo "  Granting extra permissions" >&2
echo "grant all on spatial_ref_sys to civicboom;"  | psql -q -d civicboom
echo "grant all on geometry_columns to civicboom;" | psql -q -d civicboom


##############################################################################
# civicboom_gis

echo "Creating civicboom_gis database"
echo "Creating civicboom_gis database" >&2
createdb -E utf8 -O civicboom civicboom_gis
createlang plpgsql civicboom_gis

echo "  Loading PostGIS extras"
psql -q -d civicboom_gis -f /usr/share/postgresql/8.4/contrib/postgis.sql
psql -q -d civicboom_gis -f /usr/share/postgresql/8.4/contrib/spatial_ref_sys.sql

echo "  Granting extra permissions"
echo "  Granting extra permissions" >&2
echo "grant all on spatial_ref_sys to civicboom;"  | psql -q -d civicboom_gis
echo "grant all on geometry_columns to civicboom;" | psql -q -d civicboom_gis

echo "  Creating places table"
echo "  Creating places table" >&2
echo "
CREATE TABLE places(
	id SERIAL PRIMARY KEY NOT NULL,
	location GEOMETRY NOT NULL,
	name VARCHAR(250) NOT NULL,
	type VARCHAR(32) NOT NULL
);
" | psql -q -U civicboom -d civicboom_gis -h localhost # have to connect over TCP, unix sockets try ident auth
PLACES=`dirname $0`/places.sql.bz2
if [ -f $PLACES ] ; then
	echo "Found $PLACES, populating locations table"
	if [ which pv >/dev/null ] ; then
		pv $PLACES | bunzip2 | psql -q -U civicboom -d civicboom_gis
	else
		bzcat $PLACES | psql -q -U civicboom -d civicboom_gis
	fi
else
	echo "Can't find $PLACES, not populating locations table"
fi
echo "
CREATE INDEX places__location ON places USING GIST (location); 
CREATE INDEX places__name ON places(name); 
VACUUM ANALYZE places;
" | psql -q -U civicboom -d civicboom_gis -h localhost


##############################################################################
# civicboom_log

echo "Creating civicboom_log database"
echo "Creating civicboom_log database" >&2
createdb -E utf8 -O civicboom civicboom_log
echo "
CREATE TABLE events(
	id SERIAL PRIMARY KEY NOT NULL,
	date_sent TIMESTAMP NOT NULL DEFAULT now(),
	module VARCHAR(250) NOT NULL,
	line_num INTEGER NOT NULL,
	username VARCHAR(64) NOT NULL,
	url TEXT NOT NULL,
	address INET NOT NULL,
	priority INT NOT NULL,
	message TEXT NOT NULL
);
CREATE INDEX events__date_sent ON events(date_sent);
CREATE INDEX events__module ON events(module);
CREATE INDEX events__username ON events(username);
CREATE INDEX events__priority ON events(priority);
" | psql -U civicboom -d civicboom_log -h localhost

exit 0
