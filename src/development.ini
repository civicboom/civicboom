#
# civicboom - Pylons development environment configuration
#
# The %(here)s variable will be replaced with the parent directory of this file

[DEFAULT]
# WARNING: *THE LINE BELOW MUST BE UNCOMMENTED ON A PRODUCTION ENVIRONMENT*
# Debug mode will enable the interactive debugging tool, allowing ANYONE to
# execute malicious code after an exception is raised.
debug = true

# Uncomment and replace with the address which should receive any error reports
#email_to = you@yourdomain.com
#smtp_server      = localhost
error_email_from = paste@localhost


#[app:api_keys]
api_key.janrain           = 2f93094487a2e2af9f60725670e8cbd5bdc9fe8a
api_key.reCAPTCHA.public  = 6LeWCLwSAAAAAL-bvPkW6tDkf_gpCiKuSaF9R_fW
api_key.reCAPTCHA.private = 6LeWCLwSAAAAAAxbsaBz76rVRphcs2lK5M0X_XHK


#[app:email]
email.autogen_from  = service@civicboom.com
email.smtp_server   = localhost
email.smtp_username =
email.smtp_password =

#[app:paths]
path.temp = %(here)s/data/temp

#[app:static_content]
warehouse      = s3
warehouse_url  = http://cb-wh-test.s3.amazonaws.com
aws_access_key = AKIAJBCRHHRCCZGLB3SQ
aws_secret_key = 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
s3_bucket_name = cb-wh-test

#[app:contacts]
email.contact   = contact@civicboom.com
email.errors    = error@civicboom.com
email.moderator = test@test.com

#[app:features_enabled]
feature.aggregate.email   = False
feature.aggregate.twitter = False
feature.profanity_filter  = True

#[app:services]
service.memcache.server = 127.0.0.1:11211

[server:main]
use = egg:Paste#http
host = 0.0.0.0
port = 5000

[app:main]
use = egg:civicboom
full_stack = true
static_files = true
lang = en

cache_dir = %(here)s/data
beaker.session.key     = civicboom
beaker.session.secret  = somesecret
beaker.session.auto    = True
beaker.session.timeout = 43200

# If you'd like to fine-tune the individual locations of the cache data dirs
# for the Cache data, or the Session saves, un-comment the desired settings
# here:
beaker.cache.enabled = False
#beaker.cache.data_dir = %(here)s/data/cache
#beaker.session.data_dir = %(here)s/data/sessions



# Authkit
#authkit.setup.method               = form, cookie
authkit.cookie.signoutpath         = /account/signout
authkit.form.authenticate.function = civicboom.lib.authentication:valid_username_and_password
authkit.form.template.obj          = civicboom.lib.authentication:render_signin
authkit.cookie.badcookie.page         = false
#authkit.cookie.badcookie.template.obj = indicofb.lib.auth_permissions:render_badcookie
authkit.cookie.secret         = secret civic string
authkit.cookie.name           = Civicboom
authkit.cookie.params.expires = 4800
authkit.cookie.enforce        = True
authkit.cookie.includeip      = True
#authkit.cookie.nouserincookie = False #AllanC - because False is a a string and is TRUE this line was removed because Authkit went nuts with the session middlware
#authkit.cookie.params.comment = this is a comment


# SQLAlchemy database URL
sqlalchemy.main.url          = postgresql://civicboom:civicboom@localhost/civicboom
sqlalchemy.main.pool_recycle = 3600
sqlalchemy.log.url           = postgresql://civicboom:civicboom@localhost/civicboom_log
sqlalchemy.log.pool_recycle  = 3600
sqlalchemy.gis.url           = postgresql://civicboom:civicboom@localhost/civicboom_gis
sqlalchemy.gis.pool_recycle  = 3600
#sqlalchemy.legacy.url          = mysql://indiconews:indiconews@127.0.0.1/indiconews
#sqlalchemy.legacy.pool_recycle = 3600


# prefix is normally used to eg serve a pylons app at /myapp when it was
# designed for use at /, but as well as that it deals with x-forwarded-for
#filter-with = proxy-prefix

[filter:proxy-prefix]
use = egg:PasteDeploy#prefix
prefix = /

# Logging configuration
[loggers]
keys = root, routes, civicboom, sqlalchemy, user

[handlers]
keys = console, userlog

[formatters]
keys = generic

[logger_root]
level = INFO
handlers = console

[logger_routes]
level = INFO
handlers =
qualname = routes.middleware
# "level = DEBUG" logs the route matched and routing variables.

[logger_civicboom]
level = INFO
handlers =
qualname = civicboom

[logger_user]
level = DEBUG
handlers = userlog
qualname = user

[logger_sqlalchemy]
level = WARNING
handlers =
qualname = sqlalchemy.engine
# "level = INFO" logs SQL queries.
# "level = DEBUG" logs SQL queries and results.
# "level = WARN" logs neither.  (Recommended for production systems.)

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[handler_userlog]
class = civicboom.lib.userlog.UserLogHandler
args = ()
level = NOTSET
formatter = generic

[formatter_generic]
format = %(asctime)s,%(msecs)03d %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %H:%M:%S
